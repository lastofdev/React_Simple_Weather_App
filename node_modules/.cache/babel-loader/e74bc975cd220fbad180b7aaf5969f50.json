{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/weather/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport \"bootswatch/journal/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\nconst PLACES = [{\n  name: \"Mexico City\",\n  zip: \"94303\"\n}, {\n  name: \"Sunnyvale\",\n  zip: \"94088\"\n}, {\n  name: \"Santa Cruz\",\n  zip: \"95063\"\n}, {\n  name: \"Honolulu\",\n  zip: \"96803\"\n}];\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" + zip + \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }\n    }, \"Loading\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, weather.main, \" in \", weatherData.name, /*#__PURE__*/React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Wind Speed: \", weatherData.wind.speed, \" mi/hr\"));\n  }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n\n  render() {\n    const activePlace = this.state.activePlace;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"React Simple Weather App\"))), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Select a city\"), /*#__PURE__*/React.createElement(Nav, {\n      bsStyle: \"pills\",\n      stacked: true,\n      activeKey: activePlace,\n      onSelect: index => {\n        this.setState({\n          activePlace: index\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, PLACES.map((place, index) => /*#__PURE__*/React.createElement(NavItem, {\n      key: index,\n      eventKey: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, place.name)))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WeatherDisplay, {\n      key: activePlace,\n      zip: PLACES[activePlace].zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/weather/src/App.js"],"names":["React","Component","Navbar","NavItem","Nav","Grid","Row","Col","PLACES","name","zip","WeatherDisplay","constructor","state","weatherData","componentDidMount","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","temp_max","temp_min","wind","speed","App","activePlace","index","map","place"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport \"bootswatch/journal/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n\nconst PLACES = [\n  { name: \"Mexico City\", zip: \"94303\" },\n  { name: \"Sunnyvale\", zip: \"94088\" },\n  { name: \"Santa Cruz\", zip: \"95063\" },\n  { name: \"Honolulu\", zip: \"96803\" }\n];\n\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°</p>\n        <p>High: {weatherData.main.temp_max}°</p>\n        <p>Low: {weatherData.main.temp_min}°</p>\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div>\n        <Navbar>\n          <Navbar.Header>\n            <Navbar.Brand>\n              React Simple Weather App\n            </Navbar.Brand>\n          </Navbar.Header>\n        </Navbar>\n        <Grid>\n          <Row>\n            <Col md={4} sm={4}>\n              <h3>Select a city</h3>\n              <Nav\n                bsStyle=\"pills\"\n                stacked\n                activeKey={activePlace}\n                onSelect={index => {\n                  this.setState({ activePlace: index });\n                }}\n              >\n                {PLACES.map((place, index) => (\n                  <NavItem key={index} eventKey={index}>{place.name}</NavItem>\n                ))}\n              </Nav>\n            </Col>\n            <Col md={8} sm={8}>\n              <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}